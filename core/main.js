
console.log('[MAIN] SUPER —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è...');

const dbmSUPER_APP = {
    isPanelOpen: false,
    elements: {},
    userSubscription: { status: 'free' }, // –°—Ç–∞—Ç—É—Å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

    // –ö–∞—Ç–∞–ª–æ–≥ —Ä–µ—à–µ–Ω–∏–π —Å –º–µ—Ç–∫–∞–º–∏ –¥–æ—Å—Ç—É–ø–∞ (isPaid)
    solutions: {
        'super-hover': {
            title: 'Super Hover',
            description: '–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã—Ö hover-—ç—Ñ—Ñ–µ–∫—Ç–æ–≤',
            js: 'features/super-hover/super-hover.js',
            css: 'features/super-hover/super-hover.css',
            initializer: 'dbmHoverArchitect',
            isPaid: true // –ü–ª–∞—Ç–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ
        },
        'super-grid': {
            title: 'Super Grid',
            description: '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è —Å–µ—Ç–æ—á–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)',
            isPaid: true
        },
        'super-slider': {
            title: 'Super Slider',
            description: '–ú–æ—â–Ω—ã–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Å–ª–∞–π–¥–µ—Ä–æ–≤',
            js: 'features/super-slider/super-slider.js',
            css: 'features/super-slider/super-slider.css',
            initializer: 'dbmSwiperArchitect',
            isPaid: true // –ü–ª–∞—Ç–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ
        },
        'tilda-mods': {
            title: 'Tilda Mods',
            description: '–ó–∞–ø—É—Å—Ç–∏—Ç—å –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ –º–æ–¥—ã –¥–ª—è Tilda',
            js: 'features/tilda-mods/tilda-mods.js',
            initializer: null,
            isPaid: false // –ë–µ—Å–ø–ª–∞—Ç–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ
        }
    },

    async init() {
        console.log('[MAIN] dbmSUPER_APP –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è...');
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–ª–∏–µ–Ω—Ç Supabase, –µ—Å–ª–∏ –µ–≥–æ –µ—â–µ –Ω–µ—Ç
        if (!window.supabaseClient) {
            await this.loadScript('../supabase.js', false);
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –µ–≥–æ –ø–æ–¥–ø–∏—Å–∫—É
        this.userSubscription = await this.checkAuthAndSubscription();

        // **–ì–õ–ê–í–ù–ê–Ø –õ–û–ì–ò–ö–ê**: –ü–æ–∫–∞–∑—ã–≤–∞–µ–º UI —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
        if (this.userSubscription.status !== 'logged_out' && this.userSubscription.status !== 'error') {
            console.log(`[MAIN] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω. –°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏: ${this.userSubscription.status}`);
            this.buildUI();
        } else {
            console.log('[MAIN] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, UI –Ω–µ –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω.');
        }
    },

    async checkAuthAndSubscription() {
        try {
            const { data: { session } } = await window.supabaseClient.auth.getSession();
            if (!session) return { status: 'logged_out' };

            const { data, error } = await window.supabaseClient
                .from('subscriptions_view')
                .select('*')
                .eq('user_id', session.user.id)
                .single();
            
            if (error || !data) return { status: 'free' };
            
            const endsAt = data['–ê–∫—Ç–∏–≤–Ω–∞ –¥–æ'] ? new Date(data['–ê–∫—Ç–∏–≤–Ω–∞ –¥–æ']) : null;
            if (data['–°—Ç–∞—Ç—É—Å'] === 'active' && endsAt > new Date()) {
                return { status: 'active' };
            }

            return { status: 'free' }; // –ï—Å–ª–∏ –ø–æ–¥–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–ª–∞ –∏–ª–∏ –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞
        } catch (e) {
            console.error('[MAIN] –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞:', e);
            return { status: 'error' };
        }
    },

    buildUI() {
        if (this.elements.floatingIcon) return; // UI —É–∂–µ —Å–æ–∑–¥–∞–Ω
        this.createFloatingIcon();
        this.createSolutionsWindow();
        this.addEventListeners();

        document.addEventListener('super-panel-closed', () => {
            this.isPanelOpen = false;
            this.elements.floatingIcon.classList.remove('super-hidden');
        });
    },

    destroyUI() {
        this.elements.floatingIcon?.remove();
        this.elements.solutionsWindow?.remove();
        this.elements = {};
    },

    createFloatingIcon() {
        this.elements.floatingIcon = document.createElement('div');
        this.elements.floatingIcon.id = 'super-floating-icon';
        this.elements.floatingIcon.innerHTML = `<div>SUPER</div>`;
        document.body.appendChild(this.elements.floatingIcon);
    },

    createSolutionsWindow() {
        this.elements.solutionsWindow = document.createElement('div');
        this.elements.solutionsWindow.id = 'super-solutions-window';
        this.elements.solutionsWindow.classList.add('super-hidden');

        let cardsHTML = '';
        for (const key in this.solutions) {
            const solution = this.solutions[key];
            const hasAccess = this.userSubscription.status === 'active' || !solution.isPaid;
            
            cardsHTML += `
                <div class="card ${hasAccess ? '' : 'disabled'}" data-solution-key="${key}">
                    <h4>${solution.title} ${!hasAccess ? 'üîí' : ''}</h4>
                    <p>${solution.description}</p>
                </div>`;
        }
        
        this.elements.solutionsWindow.innerHTML = cardsHTML;
        if (this.userSubscription.status !== 'active') {
             this.elements.solutionsWindow.innerHTML += '<p class="upgrade-prompt">–û—Ñ–æ—Ä–º–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞</p>';
        }

        document.body.appendChild(this.elements.solutionsWindow);
    },

    addEventListeners() {
        this.elements.floatingIcon.addEventListener('click', () => {
            if (this.isPanelOpen) return;
            this.elements.solutionsWindow.classList.toggle('super-hidden');
        });

        this.elements.solutionsWindow.addEventListener('click', (e) => {
            const card = e.target.closest('.card');
            if (card) {
                if (card.classList.contains('disabled')) {
                    alert('–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –ø–ª–∞—Ç–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–∫—Ä–æ–π—Ç–µ –ø–æ–ø–∞–ø —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –∏ –æ—Ñ–æ—Ä–º–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É.');
                    return;
                }
                this.elements.solutionsWindow.classList.add('super-hidden');
                this.launchSolution(card.dataset.solutionKey);
            }
        });
    },

    launchSolution(solutionKey) {
        const solution = this.solutions[solutionKey];
        if (!solution) {
            console.error(`[MAIN] –†–µ—à–µ–Ω–∏–µ "${solutionKey}" –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.`);
            return;
        }

        console.log(`[MAIN] –ó–∞–ø—É—Å–∫–∞–µ–º —Ä–µ—à–µ–Ω–∏–µ: ${solutionKey}`);

        // –ó–∞–≥—Ä—É–∂–∞–µ–º CSS —Ä–µ—à–µ–Ω–∏—è (–µ—Å–ª–∏ –µ—â–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω)
        if (solution.css) {
           this.loadStylesheet(solution.css);
        }
        // –ó–∞–≥—Ä—É–∂–∞–µ–º CSS –¥–ª—è –ø–∞–Ω–µ–ª–∏ (–µ—Å–ª–∏ –µ—â–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω)
       this.loadStylesheet('core/super-panel-manager.css');

        // –ó–∞–≥—Ä—É–∂–∞–µ–º JS —Ä–µ—à–µ–Ω–∏—è
        if (solution.js && solution.initializer) {
           // –°–Ω–∞—á–∞–ª–∞ –∑–∞–≥—Ä—É–∂–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä—ã, –ø–æ—Ç–æ–º —Å–∞–º–æ —Ä–µ—à–µ–Ω–∏–µ
           this.loadScript('core/super-panel-manager.js', false, () => {
               this.loadScript('core/super-selection-manager.js', false, () => {
                   // –ü–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –≤—Å–µ —Å–∫—Ä–∏–ø—Ç—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã, –≤—ã–∑—ã–≤–∞–µ–º init
                   this.loadScript(solution.js, true, () => {
                       console.log(`[MAIN] –í—Å–µ —Å–∫—Ä–∏–ø—Ç—ã –¥–ª—è ${solutionKey} –≥–æ—Ç–æ–≤—ã. –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä—ã...`);
                       
                       // –î–∞–µ–º –≤—Ä–µ–º—è —Å–∫—Ä–∏–ø—Ç–∞–º –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
                       setTimeout(() => {
                           console.log(`[MAIN] –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ ${solution.initializer}`);
                           
                           // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–µ–µ —Ä–µ—à–µ–Ω–∏–µ –≤ SuperPanelManager
                           if (window.SuperPanelManager) {
                               window.SuperPanelManager.setCurrentSolution(solution.initializer);
                           }
                           
                           // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –≤ "–º–∏—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã", —á—Ç–æ–±—ã –∑–∞–ø—É—Å—Ç–∏—Ç—å –Ω—É–∂–Ω—ã–π –æ–±—ä–µ–∫—Ç
                           window.dispatchEvent(new CustomEvent('dbmInitSolution', {
                               detail: {
                                   name: solution.initializer
                               }
                           }));
                       }, 300); // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
                   });
               });
           });
        }
    },

    loadScript(path, isModule, callback) {
        const scriptId = `dbm-script-${path.split('/').pop()}`; // e.g., dbm-script-super-panel-manager.js
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ —Ç–æ–ª—å–∫–æ –Ω–∞–ª–∏—á–∏–µ —Å–∫—Ä–∏–ø—Ç–∞, –Ω–æ –∏ –Ω–∞–ª–∏—á–∏–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤
        if (document.getElementById(scriptId)) {
            console.log(`[MAIN] –°–∫—Ä–∏–ø—Ç ${path} —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω.`);
            
            // –î–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ–±—ä–µ–∫—Ç—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å–æ–∑–¥–∞–Ω—ã
            if (path.includes('super-panel-manager.js') && typeof window.SuperPanelManager === 'undefined') {
                console.log(`[MAIN] –ù–æ –æ–±—ä–µ–∫—Ç SuperPanelManager –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º...`);
                document.getElementById(scriptId).remove();
            } else if (path.includes('super-selection-manager.js') && typeof window.SuperSelectionManager === 'undefined') {
                console.log(`[MAIN] –ù–æ –æ–±—ä–µ–∫—Ç SuperSelectionManager –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º...`);
                document.getElementById(scriptId).remove();
            } else {
                if (callback) {
                    callback();
                }
                return;
            }
        }

        const src = chrome.runtime.getURL(path);
        console.log(`[MAIN] –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–∫—Ä–∏–ø—Ç: ${src}`);
        const script = document.createElement('script');
        script.id = scriptId;
        script.src = src;
        if (isModule) {
            script.type = 'module';
        }
        script.onload = () => {
            console.log(`[MAIN] –°–∫—Ä–∏–ø—Ç ${src} —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω.`);
            if (callback) {
                callback();
            }
        };
        script.onerror = () => console.error(`[MAIN] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∫—Ä–∏–ø—Ç–∞: ${src}`);
        document.head.appendChild(script);
    },

    loadStylesheet(path) {
        const styleId = `dbm-style-${path.split('/').pop()}`;
        if (document.getElementById(styleId)) {
            console.log(`[MAIN] –°—Ç–∏–ª–∏ ${path} —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã.`);
            return;
        }
        const href = chrome.runtime.getURL(path);
        console.log(`[MAIN] –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∏–ª–∏: ${href}`);
        const link = document.createElement('link');
        link.id = styleId;
        link.rel = 'stylesheet';
        link.href = href;
        document.head.appendChild(link);
    }
};

// --- –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ---
try {
    dbmSUPER_APP.init();
    window.dbmSUPER_APP = dbmSUPER_APP;
} catch (error) {
    console.error('[MAIN] –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ dbmSUPER_APP:', error);
}